// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package cago

import (
	"ca-tech-dojo-go/pkg/cago/controller"
	"ca-tech-dojo-go/pkg/cago/interactor"
	"ca-tech-dojo-go/pkg/cago/middleware"
	"ca-tech-dojo-go/pkg/cago/presenter"
	"ca-tech-dojo-go/pkg/cago/repository/cache/redis"
	"ca-tech-dojo-go/pkg/cago/repository/database"
	"ca-tech-dojo-go/pkg/cago/router"
	"ca-tech-dojo-go/pkg/cago/service"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitUserRouter() router.UserRouter {
	config := NewConfig()
	db := NewDB(config)
	repository := database.NewRepository(db)
	userService := service.NewUserService(repository)
	userInteractor := interactor.NewUserInteractor(userService)
	userPresenter := presenter.NewUserPresenter()
	userController := controller.NewUserController(userInteractor, userPresenter)
	userRouter := router.NewUserRouter(userController)
	return userRouter
}

func InitGachaRouter() router.GachaRouter {
	config := NewConfig()
	db := NewDB(config)
	repository := database.NewRepository(db)
	gachaService := service.NewGachaService(repository)
	charaService := service.NewCharaService(repository)
	gachaInteractor := interactor.NewGachaInteractor(gachaService, charaService)
	gachaPresenter := presenter.NewGachaPresenter()
	gachaController := controller.NewGachaController(gachaInteractor, gachaPresenter)
	gachaRouter := router.NewGachaRouter(gachaController)
	return gachaRouter
}

func InitCharaRouter() router.CharaRouter {
	config := NewConfig()
	db := NewDB(config)
	repository := database.NewRepository(db)
	charaService := service.NewCharaService(repository)
	charaInteractor := interactor.NewCharaInteractor(charaService)
	charaPresenter := presenter.NewCharaPresenter()
	charaController := controller.NewCharaController(charaInteractor, charaPresenter)
	charaRouter := router.NewCharaRouter(charaController)
	return charaRouter
}

func InitRankingRouter() router.RankingRouter {
	config := NewConfig()
	db := NewDB(config)
	repository := database.NewRepository(db)
	pool := NewRedis(config)
	cacheRepository := redis.NewRepository(pool)
	rankingService := service.NewRankingService(repository, cacheRepository)
	userService := service.NewUserService(repository)
	rankingInteractor := interactor.NewRankingInteractor(rankingService, userService)
	rankingPresenter := presenter.NewRankingPresenter()
	rankingController := controller.NewRankingController(rankingInteractor, rankingPresenter)
	rankingRouter := router.NewRankingRouter(rankingController)
	return rankingRouter
}

func InitMiddleware() middleware.Middleware {
	config := NewConfig()
	db := NewDB(config)
	repository := database.NewRepository(db)
	middlewareMiddleware := middleware.NewAuthMiddleware(repository)
	return middlewareMiddleware
}

// wire.go:

var SuperSet = wire.NewSet(NewConfig, NewDB, NewRedis, database.NewRepository, redis.NewRepository)
